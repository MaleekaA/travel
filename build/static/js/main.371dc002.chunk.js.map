{"version":3,"sources":["NearestLocations.jsx","App.js","reportWebVitals.js","index.js"],"names":["NearestLocations","placeName","setPlaceName","useState","malls","setMalls","restaurants","setRestaurants","error","setError","loading","setLoading","React","createElement","type","value","onChange","e","target","placeholder","onClick","async","response","fetch","concat","process","method","headers","Content-Type","body","JSON","stringify","place_name","ok","Error","data","json","err","message","style","color","map","mall","index","key","mall_name","latitude","longitude","restaurant","restaurant_name","App","className","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"+JAwEeA,MAtEf,WACE,MAAOC,EAAWC,GAAgBC,mBAAS,KACpCC,EAAOC,GAAYF,mBAAS,KAC5BG,EAAaC,GAAkBJ,mBAAS,KACxCK,EAAOC,GAAYN,mBAAS,KAC5BO,EAASC,GAAcR,oBAAS,GA4BvC,OACES,IAAAC,cAAA,WACED,IAAAC,cAAA,UAAI,0BACJD,IAAAC,cAAA,SACEC,KAAK,OACLC,MAAOd,EACPe,SAAWC,GAAMf,EAAae,EAAEC,OAAOH,OACvCI,YAAY,qBAEdP,IAAAC,cAAA,UAAQO,QAnCSC,UACnBV,GAAW,GACX,IACE,MAAMW,QAAiBC,MAAK,GAAAC,OAAIC,wBAA6B,cAAc,CACzEC,OAAQ,OACRC,QAAS,CACPC,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CAAEC,WAAY/B,MAErC,IAAKqB,EAASW,GACZ,MAAM,IAAIC,MAAM,+BAElB,MAAMC,QAAab,EAASc,OAC5B/B,EAAS8B,EAAK/B,OACdG,EAAe4B,EAAK7B,aACpBG,EAAS,IACT,MAAO4B,GACP5B,EAAS4B,EAAIC,SACd,QACC3B,GAAW,MAeoB,UAE9BD,GAAWE,IAAAC,cAAA,SAAG,cACdL,GAASI,IAAAC,cAAA,KAAG0B,MAAO,CAAEC,MAAO,QAAUhC,GAEvCI,IAAAC,cAAA,UAAI,0BACJD,IAAAC,cAAA,UACGT,EAAMqC,IAAI,CAACC,EAAMC,IAChB/B,IAAAC,cAAA,MAAI+B,IAAKD,GACP/B,IAAAC,cAAA,cAAS6B,EAAKG,WAAmBjC,IAAAC,cAAA,WAAM,aAC5B6B,EAAKI,SAAS,gBAAcJ,EAAKK,aAKlDnC,IAAAC,cAAA,UAAI,uBACJD,IAAAC,cAAA,UACGP,EAAYmC,IAAI,CAACO,EAAYL,IAC5B/B,IAAAC,cAAA,MAAI+B,IAAKD,GACP/B,IAAAC,cAAA,cAASmC,EAAWC,iBAAyBrC,IAAAC,cAAA,WAAM,aACxCmC,EAAWF,SAAS,gBAAcE,EAAWD,eCrDrDG,MARf,WACE,OACEtC,IAAAC,cAAA,OAAKsC,UAAU,OACbvC,IAAAC,cAACb,EAAgB,QCMRoD,MAZSC,IAClBA,GAAeA,aAAuBC,UACxCC,EAAAtC,EAAA,GAAAuC,KAAAD,EAAAE,KAAA,UAAqBD,KAAKE,IAAiD,IAAhDC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,QAAEA,GAASL,EACpEC,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAQV,MCDDW,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHxD,IAAAC,cAACD,IAAMyD,WAAU,KACfzD,IAAAC,cAACqC,EAAG,QAIRE","file":"static/js/main.371dc002.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction NearestLocations() {\r\n  const [placeName, setPlaceName] = useState('');\r\n  const [malls, setMalls] = useState([]);\r\n  const [restaurants, setRestaurants] = useState([]);\r\n  const [error, setError] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleSearch = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await fetch(`${process.env.REACT_APP_API_URL}/api/route`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ place_name: placeName }),\r\n      });\r\n      if (!response.ok) {\r\n        throw new Error('Network response was not ok');\r\n      }\r\n      const data = await response.json();\r\n      setMalls(data.malls);\r\n      setRestaurants(data.restaurants);\r\n      setError('');\r\n    } catch (err) {\r\n      setError(err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  \r\n  \r\n\r\n  return (\r\n    <div>\r\n      <h1>Find Nearest Locations</h1>\r\n      <input \r\n        type=\"text\" \r\n        value={placeName} \r\n        onChange={(e) => setPlaceName(e.target.value)} \r\n        placeholder=\"Enter place name\" \r\n      />\r\n      <button onClick={handleSearch}>Search</button>\r\n\r\n      {loading && <p>Loading...</p>}\r\n      {error && <p style={{ color: 'red' }}>{error}</p>}\r\n\r\n      <h2>Nearest Shopping Malls</h2>\r\n      <ul>\r\n        {malls.map((mall, index) => (\r\n          <li key={index}>\r\n            <strong>{mall.mall_name}</strong><br />\r\n            Latitude: {mall.latitude}, Longitude: {mall.longitude}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n\r\n      <h2>Nearest Restaurants</h2>\r\n      <ul>\r\n        {restaurants.map((restaurant, index) => (\r\n          <li key={index}>\r\n            <strong>{restaurant.restaurant_name}</strong><br />\r\n            Latitude: {restaurant.latitude}, Longitude: {restaurant.longitude}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NearestLocations;\r\n","import React from 'react';\nimport NearestLocations from './NearestLocations.jsx';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <NearestLocations />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\nreportWebVitals();\n"],"sourceRoot":""}